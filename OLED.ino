//=============================================================================================================================================
//DISPLAY OLED 128x64
//=============================================================================================================================================

//=============================================================================================================================================
//IMAGENS
//=============================================================================================================================================

const unsigned char ifce_logo[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x3c, 0x7f, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x7e, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x7e, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x3c, 0x7f, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0x00, 0x03, 0x73, 0x7f, 0xff, 0xfb, 0x37, 0xcf, 0x83, 0xdf, 0x7c, 0xfb, 0xe3, 0x98, 
    0xff, 0x7f, 0x80, 0x03, 0x73, 0x68, 0xce, 0x63, 0x33, 0x9d, 0xc3, 0x18, 0x6e, 0xc3, 0x67, 0x98, 
    0xff, 0x7f, 0x80, 0x03, 0x7b, 0x70, 0xce, 0x63, 0x33, 0x98, 0xc3, 0x1e, 0x66, 0xf3, 0x67, 0x98, 
    0xff, 0x7f, 0x80, 0x03, 0x7f, 0x78, 0xce, 0x63, 0x33, 0x98, 0xc3, 0xdf, 0x66, 0xfb, 0xe6, 0xd8, 
    0xff, 0x7f, 0x80, 0x03, 0x6f, 0x1c, 0xce, 0x63, 0x33, 0x98, 0xc3, 0x18, 0x66, 0xc3, 0xcf, 0xd8, 
    0xff, 0x7f, 0x80, 0x03, 0x6f, 0x4c, 0xce, 0x63, 0x33, 0x9d, 0xc3, 0x18, 0x6e, 0xc3, 0x6f, 0xd8, 
    0xff, 0x7f, 0x80, 0x03, 0x67, 0x78, 0xce, 0x63, 0xe3, 0x8f, 0x83, 0x1f, 0x7c, 0xfb, 0x7c, 0x7f, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x7e, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x81, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x82, 0x08, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x86, 0x1d, 0xdb, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x86, 0x3d, 0xd3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0xff, 0x82, 0x23, 0x56, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0x3f, 0x83, 0xdf, 0xd3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xff, 0x7f, 0x80, 0x03, 0xc0, 0x00, 0x00, 0x04, 0x80, 0x00, 0x20, 0x00, 0x80, 0x4c, 0x02, 0x00, 
    0xff, 0x7f, 0x80, 0x02, 0x19, 0xf3, 0xa5, 0xc4, 0x1f, 0x33, 0xae, 0xc3, 0x98, 0x6d, 0xdf, 0x70, 
    0xff, 0x7f, 0x80, 0x06, 0x05, 0x4a, 0xe5, 0x04, 0xf5, 0xea, 0xed, 0x26, 0xa4, 0x7f, 0x52, 0x50, 
    0xff, 0x7f, 0x80, 0x06, 0x3d, 0x4a, 0xe5, 0xc4, 0xe5, 0xcb, 0xe9, 0x26, 0xa4, 0x5e, 0x52, 0xf0, 
    0xff, 0x7f, 0x80, 0x02, 0x25, 0x4a, 0xe4, 0x44, 0xe5, 0xca, 0x29, 0x26, 0xa4, 0x4f, 0x52, 0x40, 
    0x7e, 0x7f, 0x00, 0x01, 0xdd, 0x4b, 0x9d, 0x87, 0xa4, 0xb1, 0xa8, 0xc3, 0x98, 0x49, 0x91, 0x30, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//=============================================================================================================================================
//SETUP
//=============================================================================================================================================

void oled_setup() {
    if(oled.begin(SSD1306_SWITCHCAPVCC, OLED_ENDERECO)) {           //Inicia o Display OLED        
        Serial.println(F("> Display OLED 128x64                                  OK"));

        //Simula aleatoriamente os neurônios ativos das camadas escondidas para cada saída
        for(int i = 0 ; i < NEORONIOS_CAMADA_SAIDA ; i++) {
            for(int j = 0 ; j < NEORONIOS_CAMADA_ESCONDIDA_1 + NEORONIOS_CAMADA_ESCONDIDA_2 ; j++) {
                neuronios_ativos[i][j] = (random(0, 10) >= 5) ? true : false;
            }
        }
    }

    else {
        Serial.println(F("> Display OLED 128x64                                   X"));
        erro = true;
    }
}

//=============================================================================================================================================
//SETUP INTRO
//=============================================================================================================================================

void oled_setup_intro() {
    const unsigned long tempo = 5000;

    oled.clearDisplay();                               //Limpa o Display OLED
    oled.setTextColor(WHITE);                          //Define a cor do texto (obrigatório definir mesmo em displays monocromáticos)    
    oled.drawBitmap(0, 0, ifce_logo, 128, 64, WHITE);  //Logo do IFCE
    oled.display();                                    //Mostra a logo do IFCE
    delay(tempo);                                      //Aguarda alguns instantes
    
    //Curso
    oled.clearDisplay();                               //Limpa o Display OLED
    
    oled.setTextSize(1);
    oled.setCursor(25, 8);
    oled.print(F("Tecnologia em"));        

    oled.setTextSize(1);
    oled.setCursor(32, 24);
    oled.print(F("Mecatronica"));        

    oled.setTextSize(1);
    oled.setCursor(35, 40);
    oled.print(F("Industrial"));

    oled.display();                                    //Por padrão, apresenta o logo da Adafruit se a tela não for limpa primeiro
    delay(tempo);                                      //Aguarda alguns instantes

    //Disciplina
    oled.clearDisplay();                               //Limpa o Display OLED

    oled.setTextSize(1);
    oled.setCursor(34, 16);
    oled.print(F("Robotica II"));        

    oled.setTextSize(1);
    oled.setCursor(50, 32);
    oled.print(F("2023.2"));        
    
    oled.display();                                    //Por padrão, apresenta o logo da Adafruit se a tela não for limpa primeiro
    delay(tempo);                                      //Aguarda alguns instantes
    
    //Projeto
    oled.clearDisplay();                               //Limpa o Display OLED

    oled.setTextSize(1);
    oled.setCursor(44, 4);
    oled.print(F("Projeto:"));        

    oled.setTextSize(1);
    oled.setCursor(28, 20);
    oled.print(F("Robo seguidor"));        

    oled.setTextSize(1);
    oled.setCursor(28, 36);
    oled.print(F("de linha com"));        

    oled.setTextSize(1);
    oled.setCursor(26, 52);
    oled.print(F("Redes Neurais"));        
    
    oled.display();
    delay(tempo);                                      //Aguarda alguns instantes
    
    //Equipe
    oled.clearDisplay();                               //Limpa o Display OLED
    
    oled.setTextSize(1);
    oled.setCursor(45, 8);
    oled.print(F("Equipe:"));        

    oled.setTextSize(1);
    oled.setCursor(0, 24);
    oled.print(F("Newton R de F Raulino"));

    oled.setTextSize(1);
    oled.setCursor(0, 40);
    oled.print(F("Weber L G Chaves"));

    oled.display();                                    //Mostra as informações no Display
    delay(tempo);                                      //Aguarda alguns instantes
    
    oled.clearDisplay();                               //Limpa o Display OLED
}

//=============================================================================================================================================
//SETUP TREINAMENTO DA REDE NEURAL
//=============================================================================================================================================

void oled_setup_treinamento() {
    oled.clearDisplay();                               //Limpa o Display OLED    

    //Cabeçalho
    oled.setTextSize(1);
    oled.setCursor(16, 8);
    oled.print(F("Modo Rede Neural"));        

    oled.setTextSize(1);
    oled.setCursor(30, 18);
    oled.print(F("Treinando..."));        

    oled.setTextSize(1);
    oled.setCursor(0, 30);
    oled.printf("Epoch: %5d / %5d", epoch, EPOCHS);        

    oled.setTextSize(1);
    oled.setCursor(0, 42);
    oled.printf("MSE: %15.6f", mse);
    
    oled.setTextSize(1);
    oled.setCursor(0, 54);
    oled.printf("Duracao (ms): %6.2f", tempo_treino / 1000.0);
    
    oled.display();                                    //Mostra as informações no Display
}

//=============================================================================================================================================
//LOOP DO MODO NORMAL
//=============================================================================================================================================

void oled_loop_normal() {
    if(oled_timer.repeat()) {
        byte i;

        i = direcao_indice(direcao);

        oled.clearDisplay();                               //Limpa o Display OLED    

        //Cabeçalho
        oled.setTextSize(1);
        oled.setCursor(32, 8);
        oled.print(F("Modo Normal"));        

        //Sensores
        oled.setTextSize(1);
        oled.setCursor(32, 27);
        oled.print(F("SE"));
        (sensor_esquerda_estado) ? oled_circulo_aberto(50, 30) : oled_circulo_fechado(50, 30);

        oled.setTextSize(1);
        oled.setCursor(83, 27);
        oled.print(F("SD"));
        (sensor_direita_estado) ? oled_circulo_aberto(75, 30) : oled_circulo_fechado(75, 30);
      
        //Movimentos
        oled.setTextSize(1);
        oled.setCursor(19, 47);
        oled.print(F("P"));
        (i == 0) ? oled_circulo_fechado(31, 50) : oled_circulo_aberto(31, 50);

        oled.setTextSize(1);
        oled.setCursor(44, 47);
        oled.print(F("E"));
        (i == 1) ? oled_circulo_fechado(56, 50) : oled_circulo_aberto(56, 50);
        
        oled.setTextSize(1);
        oled.setCursor(69, 47);
        oled.print(F("D"));
        (i == 2) ? oled_circulo_fechado(81, 50) : oled_circulo_aberto(81, 50);

        oled.setTextSize(1);
        oled.setCursor(94, 47);
        oled.print(F("F"));
        (i == 3) ? oled_circulo_fechado(106, 50) : oled_circulo_aberto(106, 50);

        oled.display();                                    //Mostra as informações no Display
    }
}

//=============================================================================================================================================
//LOOP DO MODO REDE NEURAL
//=============================================================================================================================================

void oled_loop_rede_neural() {
    if(oled_timer.repeat()) {
        byte i;

        i = direcao_indice(direcao);

        if(direcao != direcao_anterior) direcao_anterior = direcao;            
        
        oled.clearDisplay();                               //Limpa o Display OLED    

        //Cabeçalho
        oled.setTextSize(1);
        oled.setCursor(16, 8);
        oled.print(F("Modo Rede Neural"));        

        //Camada de entrada
        oled.setTextSize(1);
        oled.setCursor(0, 27);
        oled.print(F("SD"));
        (sensor_direita_estado) ? oled_circulo_aberto(20, 30) : oled_circulo_fechado(20, 30);

        oled.setTextSize(1);
        oled.setCursor(0, 45);
        oled.print(F("SE"));
        (sensor_esquerda_estado) ? oled_circulo_aberto(20, 48) : oled_circulo_fechado(20, 48);

        //Arcos
        oled_arco(20, 30, 46, 28);
        oled_arco(20, 30, 46, 40);
        oled_arco(20, 30, 46, 52);

        oled_arco(20, 48, 46, 28);
        oled_arco(20, 48, 46, 40);
        oled_arco(20, 48, 46, 52);

        //Primeira camada escondida
        oled.setTextSize(1);
        (neuronios_ativos[i][0]) ? oled_circulo_fechado(46, 28) : oled_circulo_aberto(46, 28);

        oled.setTextSize(1);
        (neuronios_ativos[i][1]) ? oled_circulo_fechado(46, 40) : oled_circulo_aberto(46, 40);

        oled.setTextSize(1);
        (neuronios_ativos[i][2]) ? oled_circulo_fechado(46, 52) : oled_circulo_aberto(46, 52);

        //Arcos
        oled_arco(46, 28, 72, 28);
        oled_arco(46, 28, 72, 40);
        oled_arco(46, 28, 72, 52);

        oled_arco(46, 40, 72, 28);
        oled_arco(46, 40, 72, 40);
        oled_arco(46, 40, 72, 52);
        
        oled_arco(46, 52, 72, 28);
        oled_arco(46, 52, 72, 40);
        oled_arco(46, 52, 72, 52);
        
        //Segunda camada escondida
        oled.setTextSize(1);
        (neuronios_ativos[i][3]) ? oled_circulo_fechado(72, 28) : oled_circulo_aberto(72, 28);

        oled.setTextSize(1);
        (neuronios_ativos[i][4]) ? oled_circulo_fechado(72, 40) : oled_circulo_aberto(72, 40);

        oled.setTextSize(1);
        (neuronios_ativos[i][5]) ? oled_circulo_fechado(72, 52) : oled_circulo_aberto(72, 52);

        //Arcos
        oled_arco(72, 28, 100, 23);
        oled_arco(72, 28, 100, 34);
        oled_arco(72, 28, 100, 45);
        oled_arco(72, 28, 100, 56);

        oled_arco(72, 40, 100, 23);
        oled_arco(72, 40, 100, 34);
        oled_arco(72, 40, 100, 45);
        oled_arco(72, 40, 100, 56);
        
        oled_arco(72, 52, 100, 23);
        oled_arco(72, 52, 100, 34);
        oled_arco(72, 52, 100, 45);
        oled_arco(72, 52, 100, 56);

        //Camada de saída
        oled.setTextSize(1);
        oled.setCursor(110, 20);
        oled.print(F("P"));
        (direcao == "parar") ? oled_circulo_fechado(100, 23) : oled_circulo_aberto(100, 23);

        oled.setTextSize(1);
        oled.setCursor(110, 31);
        oled.print(F("E"));
        (direcao == "esquerda") ? oled_circulo_fechado(100, 34) : oled_circulo_aberto(100, 34);
        
        oled.setTextSize(1);
        oled.setCursor(110, 42);
        oled.print(F("D"));
        (direcao == "direita") ? oled_circulo_fechado(100, 45) : oled_circulo_aberto(100, 45);

        oled.setTextSize(1);
        oled.setCursor(110, 53);
        oled.print(F("F"));
        (direcao == "frente") ? oled_circulo_fechado(100, 56) : oled_circulo_aberto(100, 56);

        oled.display();                                    //Mostra as informações no Display
    }
}

//=============================================================================================================================================
//DESENHA UM CÍRCULO ABERTO
//=============================================================================================================================================

void oled_circulo_aberto(unsigned int x, unsigned int y) {
    oled.drawCircle(x, y, 4, WHITE);
}

//=============================================================================================================================================
//DESENHA UM CÍRCULO FECHADO
//=============================================================================================================================================

void oled_circulo_fechado(unsigned int x, unsigned int y) {
    for(int i = 0 ; i <= 4 ; i++) {
        oled.drawCircle(x, y, i, WHITE);
    }
}

//=============================================================================================================================================
//DESENHA UM ARCO ENTRE UM NEURÔNIO E OUTRO
//=============================================================================================================================================

void oled_arco(unsigned int x1, unsigned int y1, unsigned int x2, unsigned int y2) {
    oled.drawLine(x1 + 4, y1, x2 - 4, y2, WHITE);
}

//=============================================================================================================================================